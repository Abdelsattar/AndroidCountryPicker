apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'

task sourcesJar(type: Jar) {
    archiveClassifier.set('sources')
    from android.sourceSets.main.java.srcDirs
}

ext {
    bintrayRepo = 'maven'
    bintrayName = 'AndroidCountryPicker'
    libraryName = 'AndroidCountryPicker'

    publishedGroupId = 'com.hbb20'
    artifact = 'AndroidCountryPicker'

    libraryDescription = 'Android Country Picker (CP) is an android library which provides an easy way to search and select country.'

    siteUrl = 'https://github.com/hbb20/CountryCodePickerProject'
    gitUrl = 'https://github.com/hbb20/CountryCodePickerProject.git'

    libraryVersion = '0.0.1-alpha11'

    developerId = 'hbb20'
    developerName = 'Harsh Bhakta'
    developerEmail = 'harshbbhakta@gmail.com'

    licenseName = 'MIT'
    licenseUrl = 'https://github.com/hbb20/AndroidCountryPicker/blob/develop/LICENSE'
    allLicenses = ["MIT"]
}

def pomConfig = {
    licenses {
        license {
            name licenseName
            url licenseUrl
            distribution "repo"
        }
    }
    developers {
        developer {
            id developerId
            name developerName
            email developerEmail
        }
    }
    scm {
        url siteUrl
    }
}

artifacts {
    archives sourcesJar
}
Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())
afterEvaluate {
    publishing {
        publications
                {
                    AndroidCountryPicker(MavenPublication)
                            {
                                from components.release
                                groupId 'com.hbb20'
                                artifactId "AndroidCountryPicker"
                                version libraryVersion
                                pom.withXml {
                                    def root = asNode()
                                    root.appendNode("url", siteUrl)
                                    root.children().last() + pomConfig
//                                    def depsNode = root["dependencies"][0] ?: root.appendNode("dependencies")

//                                    def addDep = {
//                                        if (it.group == null) return // Avoid empty dependency nodes
//                                        def dependencyNode = depsNode.appendNode('dependency')
//                                        dependencyNode.appendNode('groupId', it.group)
//                                        dependencyNode.appendNode('artifactId', it.name)
//                                        dependencyNode.appendNode('version', it.version)
//                                        dependencyNode.appendNode('scope', "runtime")
//                                    }

                                    // Add deps that everyone has
//                                    configurations.implementation.allDependencies.each addDep
                                }

//                        pom.withXml {
//                            version = libraryVersion
//                            def dependenciesNode = asNode().appendNode('dependencies')
//
//                            configurations.implementation.allDependencies.each {
//
//                                if (it.name != 'unspecified') {
//                                    def dependencyNode = dependenciesNode.appendNode('dependency')
//                                    dependencyNode.appendNode('groupId', it.group)
//                                    dependencyNode.appendNode('artifactId', it.name)
//                                    dependencyNode.appendNode('version', it.version)
//                                }
//                            }
//                        }
                            }
                }
        repositories {
            maven {
                name 'JCenter'
                url "https://api.bintray.com/maven/hbb20/maven/AndroidCountryPicker/"

                credentials {
                    username properties.getProperty("bintray.user")
                    password properties.getProperty("bintray.apikey")
                }
            }
        }
    }
    version = libraryVersion
    bintray {
        user = properties.getProperty("bintray.user")
        key = properties.getProperty("bintray.apikey")
        publications = ["AndroidCountryPicker"]
        configurations = ['archives']
        pkg {
            repo = bintrayRepo
            name = bintrayName
            desc = libraryDescription
            websiteUrl = siteUrl
            vcsUrl = gitUrl
            licenses = allLicenses
            publish = true
            publicDownloadNumbers = true
            version {
                name = libraryVersion
                desc = libraryDescription
                gpg {
                    sign = true //Determines whether to GPG sign the files. The default is false
                    passphrase = properties.getProperty("bintray.gpg.password")
                    //Optional. The passphrase for GPG signing'
                }
            }
        }
    }
}

android {
    compileSdkVersion 28

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }
    tasks.withType(Javadoc).all { enabled = false }
}

dependencies {
    testImplementation 'org.robolectric:robolectric:4.3'
    testImplementation 'com.nhaarman.mockitokotlin2:mockito-kotlin:2.2.0'
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'androidx.appcompat:appcompat:1.1.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    testImplementation "io.mockk:mockk:1.9.3"
    implementation 'androidx.core:core-ktx:1.2.0'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'com.android.support:design:28.0.0'
    implementation 'com.jakewharton.timber:timber:4.7.1'

    //epoxy
    ext.epoxyVersion = '3.9.0'
    implementation "com.airbnb.android:epoxy:$epoxyVersion"
    kapt "com.airbnb.android:epoxy-processor:$epoxyVersion"
    implementation 'androidx.emoji:emoji:1.0.0'
    implementation 'org.apache.commons:commons-csv:1.7'
}

//apply from: 'https://raw.githubusercontent.com/nuuneoi/JCenter/master/bintrayv1.gradle'

